[1mdiff --git a/.envrc b/.envrc[m
[1mindex f1ac96b1c9..67e2af221e 100644[m
[1m--- a/.envrc[m
[1m+++ b/.envrc[m
[36m@@ -1,5 +1,3 @@[m
[31m-#!/bin/bash[m
[31m-[m
 source_env .env.secret[m
 [m
 # global[m
[36m@@ -10,7 +8,3 @@[m [mexport NODE_OPTIONS="--max-old-space-size=8192"[m
 # MacOS specific[m
 [m
 export REDIS_CLUSTER_IP=0.0.0.0[m
[31m-[m
[31m-# developer custom direnv config[m
[31m-[m
[31m-source_env_if_exists .envrc.private[m
\ No newline at end of file[m
[1mdiff --git a/.eslintignore b/.eslintignore[m
[1mdeleted file mode 100644[m
[1mindex 3c3629e647..0000000000[m
[1m--- a/.eslintignore[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-node_modules[m
[1mdiff --git a/.eslintrc.json b/.eslintrc.json[m
[1mindex 6c441e9cf4..c2c997de58 100644[m
[1m--- a/.eslintrc.json[m
[1m+++ b/.eslintrc.json[m
[36m@@ -1,12 +1,12 @@[m
 {[m
   "root": true,[m
   "ignorePatterns": ["**/*"],[m
[31m-  "plugins": ["@nx", "eslint-plugin-local-rules"],[m
[32m+[m[32m  "plugins": ["@nrwl/nx", "eslint-plugin-local-rules"],[m
   "overrides": [[m
     {[m
       "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],[m
       "rules": {[m
[31m-        "@nx/enforce-module-boundaries": [[m
[32m+[m[32m        "@nrwl/nx/enforce-module-boundaries": [[m
           "error",[m
           {[m
             "enforceBuildableLibDependency": true,[m
[36m@@ -223,7 +223,7 @@[m
     },[m
     {[m
       "files": ["*.ts", "*.tsx"],[m
[31m-      "extends": ["plugin:@nx/typescript"],[m
[32m+[m[32m      "extends": ["plugin:@nrwl/nx/typescript"],[m
       "rules": {[m
         "@typescript-eslint/no-extra-semi": "off",[m
         "@typescript-eslint/explicit-member-accessibility": "off",[m
[36m@@ -310,7 +310,7 @@[m
     },[m
     {[m
       "files": ["*.js", "*.jsx"],[m
[31m-      "extends": ["plugin:@nx/javascript"],[m
[32m+[m[32m      "extends": ["plugin:@nrwl/nx/javascript"],[m
       "rules": {}[m
     },[m
     {[m
[36m@@ -319,6 +319,5 @@[m
         "@typescript-eslint/no-explicit-any": "off"[m
       }[m
     }[m
[31m-  ],[m
[31m-  "extends": ["plugin:storybook/recommended"][m
[32m+[m[32m  ][m
 }[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex c51b9f44d8..39bb41a356 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -31,7 +31,6 @@[m [mTODO[m
 *.todo[m
 .env[m
 .env.*[m
[31m-.envrc.*[m
 .nvmrc[m
 .node-version[m
 # IDE - VSCode[m
[36m@@ -85,12 +84,9 @@[m [mfragmentTypes.json[m
 *.suo[m
 /.vs[m
 [m
[31m-# Honkit[m
[32m+[m[32m# Gitbook/Honkit[m
 _book[m
 .vscode/settings.json[m
 [m
 # Ignore generated .html files when running `serve`[m
 apps/**/index.html[m
[31m-[m
[31m-# Next.js[m
[31m-.next[m
[1mdiff --git a/apps/application-system/api/project.json b/apps/application-system/api/project.json[m
[1mindex 04e2d4f131..4cc9040d06 100644[m
[1m--- a/apps/application-system/api/project.json[m
[1m+++ b/apps/application-system/api/project.json[m
[36m@@ -23,7 +23,8 @@[m
     "services-endorsements-api",[m
     "services-sessions",[m
     "services-user-notification",[m
[31m-    "services-user-profile"[m
[32m+[m[32m    "services-user-profile",[m
[32m+[m	[32m"services-university-gateway-backend"[m
   ],[m
   "generators": {},[m
   "targets": {[m
[1mdiff --git a/apps/services/university-gateway/api/project.json b/apps/services/university-gateway/api/project.json[m
[1mindex f7259f3710..b241e25d8f 100644[m
[1m--- a/apps/services/university-gateway/api/project.json[m
[1m+++ b/apps/services/university-gateway/api/project.json[m
[36m@@ -1,5 +1,5 @@[m
 {[m
[31m-  "root": "apps/services/university-gateway/api",[m
[32m+[m[32m  "name": "services-university-gateway-api",[m
   "sourceRoot": "apps/services/university-gateway/api/src",[m
   "projectType": "application",[m
   "prefix": "services-university-gateway-api",[m
[36m@@ -28,16 +28,16 @@[m
           "inspect": false[m
         }[m
       },[m
[31m-      "outputs": ["{options.outputPath}"][m
[32m+[m[32m      "outputs": [ "{options.outputPath}" ][m
     },[m
     "serve": {[m
[31m-      "executor": "@nrwl/node:node",[m
[32m+[m[32m      "executor": "@nx/js:node",[m
       "options": {[m
         "buildTarget": "services-university-gateway-api:build"[m
       }[m
     },[m
     "lint": {[m
[31m-      "executor": "@nrwl/linter:eslint",[m
[32m+[m[32m      "executor": "@nx/linter:eslint",[m
       "options": {[m
         "lintFilePatterns": [[m
           "apps/services/university-gateway/api/**/*.{ts,tsx,js,jsx}"[m
[36m@@ -45,21 +45,21 @@[m
       }[m
     },[m
     "test": {[m
[31m-      "executor": "@nrwl/jest:jest",[m
[32m+[m[32m      "executor": "@nx/jest:jest",[m
       "options": {[m
         "jestConfig": "apps/services/university-gateway/api/jest.config.js",[m
         "passWithNoTests": true[m
       },[m
[31m-      "outputs": ["coverage/apps/services/university-gateway/api"][m
[32m+[m[32m      "outputs": [ "coverage/apps/services/university-gateway/api" ][m
     },[m
     "schemas/build-openapi": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "nx:run-commands",[m
       "options": {[m
         "command": "yarn nx run services-university-gateway-api:schemas/build-openapi-internal $NX_OPTIONS"[m
       }[m
     },[m
     "schemas/build-openapi-internal": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "nx:run-commands",[m
       "options": {[m
         "outputPath": "apps/services/university-gateway/api/src/openapi.yaml",[m
         "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/university-gateway/api/tsconfig.app.json apps/services/university-gateway/api/src/buildOpenApi.ts"[m
[36m@@ -68,5 +68,5 @@[m
     "docker-express": {},[m
     "service-service-portal-api": {}[m
   },[m
[31m-  "tags": ["scope:nest"][m
[32m+[m[32m  "tags": [ "scope:nest" ][m
 }[m
[1mdiff --git a/apps/services/university-gateway/api/src/app/app.module.ts b/apps/services/university-gateway/api/src/app/app.module.ts[m
[1mindex 9262f5a47d..8f592e9b32 100644[m
[1m--- a/apps/services/university-gateway/api/src/app/app.module.ts[m
[1m+++ b/apps/services/university-gateway/api/src/app/app.module.ts[m
[36m@@ -4,21 +4,15 @@[m [mimport { ApolloDriver } from '@nestjs/apollo'[m
 [m
 import { CmsTranslationsModule } from '@island.is/cms-translations'[m
 import { ProblemModule } from '@island.is/nest/problem'[m
[31m-import { SharedAuthModule } from '@island.is/judicial-system/auth'[m
[31m-import { AuditTrailModule } from '@island.is/judicial-system/audit-trail'[m
[31m-[m
[31m-[m
[31m-import { ApplicationModule } from './modules/application/application.module'[m
[31m-//import { CourseModule } from './modules/course/course.module'[m
[31m-//import { ProgramModule } from './modules/program/program.module'[m
[31m-//import { UniversityModule } from './modules/university/university.module'[m
[31m-//import { ExampleModule } from './modules/example/example.module'[m
 [m
 import { environment } from '../environments'[m
 import { BackendApi } from './data-sources/backend'[m
 [m
 import {[m
   ApplicationModule,[m
[32m+[m[32m  CourseModule,[m
[32m+[m[32m  ProgramModule,[m
[32m+[m[32m  UniversityModule,[m
 } from './modules'[m
 import { ConfigModule } from '@nestjs/config'[m
 [m
[36m@@ -40,19 +34,13 @@[m [mconst autoSchemaFile = environment.production[m
       context: ({ req }: never) => ({ req }),[m
       dataSources: () => ({ backendApi: new BackendApi() }),[m
     }),[m
[31m-    SharedAuthModule.register({[m
[31m-      jwtSecret: environment.auth.jwtSecret,[m
[31m-      secretToken: environment.auth.secretToken,[m
[31m-    }),[m
[31m-    AuditTrailModule.register(environment.auditTrail),[m
     ApplicationModule,[m
[31m-    //CourseModule,[m
[31m-    //ProgramModule,[m
[31m-    //UniversityModule,[m
[31m-    //ExampleModule,[m
[32m+[m[32m    CourseModule,[m
[32m+[m[32m    ProgramModule,[m
[32m+[m[32m    UniversityModule,[m
     CmsTranslationsModule,[m
     ProblemModule.forRoot({ logAllErrors: true }),[m
[31m-    ConfigModule.forRoot({ isGlobal: true, load: [fileModuleConfig] }),[m
[32m+[m[32m    ConfigModule.forRoot({ isGlobal: true }),[m
   ],[m
 })[m
 export class AppModule {}[m
[1mdiff --git a/apps/services/university-gateway/api/src/app/modules/application/application.controller.ts b/apps/services/university-gateway/api/src/app/modules/application/application.controller.ts[m
[1mdeleted file mode 100644[m
[1mindex 35a0404fac..0000000000[m
[1m--- a/apps/services/university-gateway/api/src/app/modules/application/application.controller.ts[m
[1m+++ /dev/null[m
[36m@@ -1,77 +0,0 @@[m
[31m-import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common'[m
[31m-import { ApplicationService } from './application.service'[m
[31m-import {[m
[31m-  ApiBody,[m
[31m-  ApiCreatedResponse,[m
[31m-  ApiOkResponse,[m
[31m-  ApiOperation,[m
[31m-  ApiParam,[m
[31m-  ApiTags,[m
[31m-} from '@nestjs/swagger'[m
[31m-import { Application, ApplicationResponse } from './model'[m
[31m-import { CreateApplicationDto, UpdateApplicationDto } from './dto'[m
[31m-[m
[31m-@ApiTags('Application')[m
[31m-@Controller()[m
[31m-export class ApplicationController {[m
[31m-  constructor(private readonly applicationService: ApplicationService) {}[m
[31m-[m
[31m-  @Get('applications/:id')[m
[31m-  @ApiParam({[m
[31m-    name: 'id',[m
[31m-    required: true,[m
[31m-    allowEmptyValue: false,[m
[31m-    description: 'Application ID',[m
[31m-  })[m
[31m-  @ApiOkResponse({[m
[31m-    type: ApplicationResponse,[m
[31m-    description: 'Returns the application by ID',[m
[31m-  })[m
[31m-  @ApiOperation({[m
[31m-    summary: 'Get application by ID',[m
[31m-  })[m
[31m-  async getApplication(@Param('id') id: string): Promise<ApplicationResponse> {[m
[31m-    return this.applicationService.getApplication(id)[m
[31m-  }[m
[31m-[m
[31m-  @Post('applications')[m
[31m-  @ApiBody({[m
[31m-    type: CreateApplicationDto,[m
[31m-  })[m
[31m-  @ApiCreatedResponse({[m
[31m-    type: Application,[m
[31m-    description: 'Returns the application that was created',[m
[31m-  })[m
[31m-  @ApiOperation({[m
[31m-    summary: 'Create application',[m
[31m-  })[m
[31m-  async createApplication([m
[31m-    @Body() applicationDto: CreateApplicationDto,[m
[31m-  ): Promise<Application> {[m
[31m-    return this.applicationService.createApplication(applicationDto)[m
[31m-  }[m
[31m-[m
[31m-  @Patch('applications/:id')[m
[31m-  @ApiParam({[m
[31m-    name: 'id',[m
[31m-    required: true,[m
[31m-    allowEmptyValue: false,[m
[31m-    description: 'Application ID',[m
[31m-  })[m
[31m-  @ApiBody({[m
[31m-    type: UpdateApplicationDto,[m
[31m-  })[m
[31m-  @ApiOkResponse({[m
[31m-    type: Application,[m
[31m-    description: 'Returns the updated application',[m
[31m-  })[m
[31m-  @ApiOperation({[m
[31m-    summary: 'Update application status, and extradata (if applies)',[m
[31m-  })[m
[31m-  async updateApplication([m
[31m-    @Param('id') id: string,[m
[31m-    @Body() applicationDto: UpdateApplicationDto,[m
[31m-  ): Promise<Application> {[m
[31m-    return this.applicationService.updateApplication(id, applicationDto)[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/apps/services/university-gateway/api/src/app/modules/application/application.module.ts b/apps/services/university-gateway/api/src/app/modules/application/application.module.ts[m
[1mindex 23c1078c19..3fe8fe6c86 100644[m
[1m--- a/apps/services/university-gateway/api/src/app/modules/application/application.module.ts[m
[1m+++ b/apps/services/university-gateway/api/src/app/modules/application/application.module.ts[m
[36m@@ -1,6 +1,5 @@[m
 import { Module } from '@nestjs/common'[m
[31m-import { ApplicationController } from './application.controller'[m
[31m-import { ApplicationService } from './application.service'[m
[32m+[m[32mimport { ApplicationResolver } from './application.resolver'[m
 import {[m
   UgReykjavikUniversityClientModule,[m
   UgReykjavikUniversityClientConfig,[m
[36m@@ -15,7 +14,6 @@[m [mimport { ConfigModule } from '@nestjs/config'[m
       load: [UgReykjavikUniversityClientConfig],[m
     }),[m
   ],[m
[31m-  controllers: [ApplicationController],[m
[31m-  providers: [ApplicationService],[m
[32m+[m[32m  providers: [ApplicationResolver],[m
 })[m
 export class ApplicationModule {}[m
[1mdiff --git a/apps/services/university-gateway/api/src/app/modules/application/application.resolver.ts b/apps/services/university-gateway/api/src/app/modules/application/application.resolver.ts[m
[1mindex 31ef29c67e..86bfc51184 100644[m
[1m--- a/apps/services/university-gateway/api/src/app/modules/application/application.resolver.ts[m
[1m+++ b/apps/services/university-gateway/api/src/app/modules/application/application.resolver.ts[m
[36m@@ -1,69 +1,22 @@[m
[31m-import { Inject, UseGuards } from '@nestjs/common'[m
[31m-import { Args, Context, Mutation, Query, Resolver } from '@nestjs/graphql'[m
[32m+[m[32mimport {[m
[32m+[m[32m  Resolver,[m
[32m+[m[32m} from '@nestjs/graphql'[m
[32m+[m[32mimport { Inject, UseGuards, UseInterceptors } from '@nestjs/common'[m
 [m
 import { LOGGER_PROVIDER } from '@island.is/logging'[m
 import type { Logger } from '@island.is/logging'[m
[32m+[m
 import {[m
[31m-  AuditedAction,[m
[31m-  AuditTrailService,[m
[31m-} from '@island.is/judicial-system/audit-trail'[m
[31m-import {[m
[31m-  CurrentGraphQlUser,[m
   JwtGraphQlAuthGuard,[m
 } from '@island.is/judicial-system/auth'[m
[31m-import type { User } from '@island.is/judicial-system/types'[m
 [m
[31m-import { BackendApi } from '../../data-sources'[m
[31m-import { PoliceCaseFilesQueryInput } from './dto/policeCaseFiles.input'[m
[31m-import { UploadPoliceCaseFileInput } from './dto/uploadPoliceCaseFile.input'[m
[31m-import { PoliceCaseFile } from './models/policeCaseFile.model'[m
[31m-import { UploadPoliceCaseFileResponse } from './models/uploadPoliceCaseFile.response'[m
[31m-import { PoliceCaseInfo } from './models/policeCaseInfo.model'[m
[31m-import { PoliceCaseInfoQueryInput } from './dto/policeCaseInfo.input'[m
[32m+[m[32mimport { Application } from './models/application.model'[m
 [m
 @UseGuards(JwtGraphQlAuthGuard)[m
[31m-@Resolver()[m
[31m-export class PoliceResolver {[m
[32m+[m[32m  @Resolver(() => Application)[m
[32m+[m[32mexport class ApplicationResolver {[m
   constructor([m
[31m-    private readonly auditTrailService: AuditTrailService,[m
     @Inject(LOGGER_PROVIDER)[m
     private readonly logger: Logger,[m
[31m-  ) {}[m
[31m-[m
[31m-  @Query(() => [PoliceCaseFile], { nullable: true })[m
[31m-  policeCaseFiles([m
[31m-    @Args('input', { type: () => PoliceCaseFilesQueryInput })[m
[31m-    input: PoliceCaseFilesQueryInput,[m
[31m-    @CurrentGraphQlUser() user: User,[m
[31m-    @Context('dataSources') { backendApi }: { backendApi: BackendApi },[m
[31m-  ): Promise<PoliceCaseFile[]> {[m
[31m-    this.logger.debug(`Getting all police case files for case ${input.caseId}`)[m
[31m-[m
[31m-    return this.auditTrailService.audit([m
[31m-      user.id,[m
[31m-      AuditedAction.GET_POLICE_CASE_FILES,[m
[31m-      backendApi.getPoliceCaseFiles(input.caseId),[m
[31m-      input.caseId,[m
[31m-    )[m
[31m-  }[m
[31m-[m
[31m-  @Mutation(() => UploadPoliceCaseFileResponse, { nullable: true })[m
[31m-  uploadPoliceCaseFile([m
[31m-    @Args('input', { type: () => UploadPoliceCaseFileInput })[m
[31m-    input: UploadPoliceCaseFileInput,[m
[31m-    @CurrentGraphQlUser() user: User,[m
[31m-    @Context('dataSources') { backendApi }: { backendApi: BackendApi },[m
[31m-  ): Promise<UploadPoliceCaseFileResponse> {[m
[31m-    const { caseId, ...uploadPoliceFile } = input[m
[31m-    this.logger.debug([m
[31m-      `Uploading police case file ${input.id} of case ${caseId} to AWS S3`,[m
[31m-    )[m
[31m-[m
[31m-    return this.auditTrailService.audit([m
[31m-      user.id,[m
[31m-      AuditedAction.UPLOAD_POLICE_CASE_FILE,[m
[31m-      backendApi.uploadPoliceFile(input.caseId, uploadPoliceFile),[m
[31m-      input.caseId,[m
[31m-    )[m
[31m-  }[m
[32m+[m[32m  ) { }[m
 }[m
[1mdiff --git a/apps/services/university-gateway/api/src/app/modules/application/dto/createApplicationDto.ts b/apps/services/university-gateway/api/src/app/modules/application/dto/createApplicationDto.ts[m
[1mdeleted file mode 100644[m
[1mindex 5a6e883876..0000000000[m
[1m--- a/apps/services/university-gateway/api/src/app/modules/application/dto/createApplicationDto.ts[m
[1m+++ /dev/null[m
[36m@@ -1,250 +0,0 @@[m
[31m-import { Allow } from 'class-validator'[m
[31m-[m
[31m-import { Field, InputType } from '@nestjs/graphql'[m
[31m-[m
[31m-import {[m
[31m-  CreateApplication,[m
[31m-  HomeCircumstances,[m
[31m-  Employment,[m
[31m-  ApplicationState,[m
[31m-  FamilyStatus,[m
[31m-} from '@island.is/university-gateway/types'[m
[31m-[m
[31m-import { CreateApplicationFileInput } from '../../file/dto'[m
[31m-import { DirectTaxPaymentInput } from './directTaxPayment.input'[m
[31m-[m
[31m-@InputType()[m
[31m-export class CreateApplicationInput implements CreateApplication {[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly name!: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly phoneNumber?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly email!: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => String)[m
[31m-  readonly homeCircumstances!: HomeCircumstances[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly homeCircumstancesCustom?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly student!: boolean[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly studentCustom?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => String)[m
[31m-  readonly employment!: Employment[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly employmentCustom?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly hasIncome!: boolean[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly usePersonalTaxCredit!: boolean[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly bankNumber?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly ledger?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly accountNumber?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly interview?: boolean[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly formComment?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => String)[m
[31m-  readonly state!: ApplicationState[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => [CreateApplicationFileInput])[m
[31m-  readonly files!: CreateApplicationFileInput[][m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly amount?: number[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly spouseName?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly spouseNationalId?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly spouseEmail?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => String)[m
[31m-  readonly familyStatus!: FamilyStatus[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly city?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly streetName?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly municipalityCode!: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly postalCode?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly hasFetchedDirectTaxPayment!: boolean[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => [DirectTaxPaymentInput])[m
[31m-  readonly directTaxPayments!: DirectTaxPaymentInput[][m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly applicationSystemId?: string[m
[31m-}[m
[31m-[m
[31m-[m
[31m-import { Allow, ArrayMinSize, IsArray, IsString } from 'class-validator'[m
[31m-import { Field, InputType } from '@nestjs/graphql'[m
[31m-import { GraphQLJSONObject } from 'graphql-type-json'[m
[31m-[m
[31m-import type {[m
[31m-  CreateApplication,[m
[31m-} from '@island.is/university-gateway/types'[m
[31m-[m
[31m-[m
[31m-import type { Gender, CreateDefendant } from '@island.is/judicial-system/types'[m
[31m-[m
[31m-@InputType()[m
[31m-export class CreateDefendantInput implements CreateDefendant {[m
[31m-  @Allow()[m
[31m-  @Field()[m
[31m-  readonly caseId!: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly noNationalId?: boolean[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly nationalId?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly name?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => String, { nullable: true })[m
[31m-  readonly gender?: Gender[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly address?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly citizenship?: string[m
[31m-}[m
[31m-[m
[31m-[m
[31m-@InputType()[m
[31m-export class CreateApplicationInput implements CreateApplication {[m
[31m-  @Allow()[m
[31m-  @Field(() => String)[m
[31m-  readonly type!: CaseType[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => GraphQLJSONObject, { nullable: true })[m
[31m-  readonly indictmentSubtypes?: IndictmentSubtypeMap[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly description?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @IsArray()[m
[31m-  @ArrayMinSize(1)[m
[31m-  @IsString({ each: true })[m
[31m-  @Field(() => [String])[m
[31m-  readonly policeCaseNumbers!: string[][m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field({ nullable: true })[m
[31m-  readonly leadInvestigator?: string[m
[31m-[m
[31m-  @Allow()[m
[31m-  @Field(() => GraphQLJSONObject, { nullable: true })[m
[31m-  readonly crimeScenes?: CrimeSceneMap[m
[31m-}[m
[31m-[m
[31m-[m
[31m-[m
[31m-import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'[m
[31m-import { IsEnum, IsOptional, IsString, IsUUID } from 'class-validator'[m
[31m-import { ModeOfDelivery } from '../../program/types'[m
[31m-[m
[31m-export class CreateApplicationDto {[m
[31m-  @IsUUID()[m
[31m-  @ApiProperty({[m
[31m-    description: 'University ID',[m
[31m-    example: '00000000-0000-0000-0000-000000000000',[m
[31m-  })[m
[31m-  universityId!: string[m
[31m-[m
[31m-  @IsUUID()[m
[31m-  @ApiProperty({[m
[31m-    description: 'Program ID',[m
[31m-    example: '00000000-0000-0000-0000-000000000000',[m
[31m-  })[m
[31m-  programId!: string[m
[31m-[m
[31m-  @IsEnum(ModeOfDelivery)[m
[31m-  @ApiProperty({[m
[31m-    description: 'What mode of delivery was selected in the application',[m
[31m-    example: ModeOfDelivery.ON_SITE,[m
[31m-    enum: ModeOfDelivery,[m
[31m-  })[m
[31m-  modeOfDelivery!: ModeOfDelivery[m
[31m-[m
[31m-  @IsString()[m
[31m-  @IsOptional()[m
[31m-  @ApiProperty({[m
[31m-    description: 'Extra data that should follow application',[m
[31m-    example: 'TBD',[m
[31m-  })[m
[31m-  @ApiPropertyOptional()[m
[31m-  extraData?: string[m
[31m-}[m
[1mdiff --git a/apps/services/university-gateway/api/src/app/modules/index.ts b/apps/services/university-gateway/api/src/app/modules/index.ts[m
[1mindex 61bf5c9d12..e9ce36ef3c 100644[m
[1m--- a/apps/services/university-gateway/api/src/app/modules/index.ts[m
[1m+++ b/apps/services/university-gateway/api/src/app/modules/index.ts[m
[36m@@ -1 +1,4 @@[m
 export { ApplicationModule } from './application/application.module'[m
[32m+[m[32mexport { CourseModule } from './course/course.module'[m
[32m+[m[32mexport { ProgramModule } from './program/program.module'[m
[32m+[m[32mexport { UniversityModule } from './university/university.module'[m
[1mdiff --git a/apps/services/university-gateway/api/src/main.ts b/apps/services/university-gateway/api/src/main.ts[m
[1mindex cfe7ea371a..0cf13a4728 100644[m
[1m--- a/apps/services/university-gateway/api/src/main.ts[m
[1m+++ b/apps/services/university-gateway/api/src/main.ts[m
[36m@@ -5,8 +5,8 @@[m [mimport { openApi } from './openApi'[m
 bootstrap({[m
   appModule: AppModule,[m
   name: 'university-gateway',[m
[31m-  port: 3379,[m
[32m+[m[32m  port: 3380,[m
   openApi,[m
[31m-  swaggerPath: '/swagger',[m
[32m+[m[32m  swaggerPath: 'api/swagger',[m
   enableVersioning: true,[m
 })[m
[1mdiff --git a/apps/services/university-gateway/backend/esbuild.json b/apps/services/university-gateway/backend/esbuild.json[m
[1mindex ec3b22f143..bab161a405 100644[m
[1m--- a/apps/services/university-gateway/backend/esbuild.json[m
[1m+++ b/apps/services/university-gateway/backend/esbuild.json[m
[36m@@ -44,7 +44,8 @@[m
     "@protobufjs/path",[m
     "@protobufjs/pool",[m
     "@protobufjs/utf8",[m
[31m-    "safer-buffer"[m
[32m+[m[32m    "safer-buffer",[m
[32m+[m[32m    "@mikro-orm/core"[m
   ],[m
   "keepNames": true[m
 }[m
[1mdiff --git a/apps/services/university-gateway/backend/jest.config.js b/apps/services/university-gateway/backend/jest.config.js[m
[1mdeleted file mode 100644[m
[1mindex cae3c81ec8..0000000000[m
[1m--- a/apps/services/university-gateway/backend/jest.config.js[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-module.exports = {[m
[31m-  preset: './jest.preset.js',[m
[31m-  rootDir: '../../../..',[m
[31m-  roots: [__dirname],[m
[31m-  coverageDirectory: '<rootDir>/coverage/apps/services/university-gateway/backend',[m
[31m-  globalSetup: `${__dirname}/test/globalSetup.ts`,[m
[31m-  globalTeardown: `${__dirname}/test/globalTeardown.ts`,[m
[31m-  setupFilesAfterEnv: [`${__dirname}/test/setup.ts`],[m
[31m-  moduleFileExtensions: ['ts', 'js', 'html', 'json'],[m
[31m-  globals: {[m
[31m-    'ts-jest': { tsconfig: `${__dirname}/tsconfig.spec.json` },[m
[31m-  },[m
[31m-  displayName: 'university-gateway-backend',[m
[31m-  testEnvironment: 'node',[m
[31m-}[m
[1mdiff --git a/apps/services/university-gateway/backend/project.json b/apps/services/university-gateway/backend/project.json[m
[1mindex 1f4ed9d8e5..6bbdbdd9d5 100644[m
[1m--- a/apps/services/university-gateway/backend/project.json[m
[1m+++ b/apps/services/university-gateway/backend/project.json[m
[36m@@ -1,5 +1,5 @@[m
 {[m
[31m-  "root": "apps/services/university-gateway/backend",[m
[32m+[m[32m  "name": "services-university-gateway-backend",[m
   "sourceRoot": "apps/services/university-gateway/backend/src",[m
   "projectType": "application",[m
   "prefix": "services-university-gateway-backend",[m
[36m@@ -42,17 +42,17 @@[m
           "inspect": false[m
         }[m
       },[m
[31m-      "outputs": ["{options.outputPath}"][m
[32m+[m[32m      "outputs": [ "{options.outputPath}" ][m
     },[m
     "serve": {[m
[31m-      "executor": "@nrwl/node:node",[m
[32m+[m[32m      "executor": "@nx/js:node",[m
       "options": {[m
         "buildTarget": "services-university-gateway-backend:build",[m
         "runtimeArgs": [ "--no-experimental-fetch", "--trace-deprecation" ][m
       }[m
     },[m
     "lint": {[m
[31m-      "executor": "@nrwl/linter:eslint",[m
[32m+[m[32m      "executor": "@nx/linter:eslint",[m
       "options": {[m
         "lintFilePatterns": [[m
           "apps/services/university-gateway/backend/**/*.{ts,tsx,js,jsx}"[m
[36m@@ -60,42 +60,42 @@[m
       }[m
     },[m
     "dev-services": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "command": "docker-compose up -d",[m
         "cwd": "apps/services/university-gateway/backend"[m
       }[m
     },[m
     "schemas/build-openapi": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "outputPath": "apps/services/university-gateway/backend/src/openapi.yaml",[m
         "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/university-gateway/backend/tsconfig.app.json apps/services/university-gateway/backend/src/buildOpenApi.ts"[m
       }[m
     },[m
     "migrate": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "command": "sequelize-cli db:migrate",[m
         "cwd": "apps/services/university-gateway/backend"[m
       }[m
     },[m
     "migrate/undo": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "command": "sequelize-cli db:migrate:undo",[m
         "cwd": "apps/services/university-gateway/backend"[m
       }[m
     },[m
     "migrate/generate": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "command": "sequelize-cli migration:generate --name $(whoami)",[m
         "cwd": "apps/services/university-gateway/backend"[m
       }[m
     },[m
     "seed": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "command": "sequelize-cli db:seed:all",[m
         "cwd": "apps/services/university-gateway/backend"[m
[36m@@ -103,11 +103,11 @@[m
     },[m
     "docker-express": {},[m
     "extract-strings": {[m
[31m-      "executor": "@nrwl/workspace:run-commands",[m
[32m+[m[32m      "executor": "@nx:run-commands",[m
       "options": {[m
         "command": "yarn ts-node -P libs/localization/tsconfig.lib.json libs/localization/scripts/extract 'apps/services/university-gateway/backend/src/app/messages/**/*.ts'"[m
       }[m
     }[m
   },[m
[31m-  "tags": ["scope:services/university-gateway"][m
[32m+[m[32m  "tags": [ "scope:services/university-gateway" ][m
 }[m
[1mdiff --git a/apps/services/university-gateway/backend/src/app/app.module.ts b/apps/services/university-gateway/backend/src/app/app.module.ts[m
[1mindex a26e0dba55..c97e1dac44 100644[m
[1m--- a/apps/services/university-gateway/backend/src/app/app.module.ts[m
[1m+++ b/apps/services/university-gateway/backend/src/app/app.module.ts[m
[36m@@ -5,7 +5,7 @@[m [mimport { ProgramModule } from './modules/program/program.module'[m
 import { UniversityModule } from './modules/university/university.module'[m
 import { ExampleModule } from './modules/example/example.module'[m
 import { SequelizeModule } from '@nestjs/sequelize'[m
[31m-import { SequelizeConfigService } from './sequelizeConfig.service'[m
[32m+[m[32mimport { SequelizeConfigService } from './sequelizeConfig.service'[m[41m  [m
 [m
 @Module({[m
   imports: [[m
[1mdiff --git a/apps/services/university-gateway/backend/src/app/modules/course/model/course.ts b/apps/services/university-gateway/backend/src/app/modules/course/model/course.ts[m
[1mindex 56e67ce4ae..e71c296e16 100644[m
[1m--- a/apps/services/university-gateway/backend/src/app/modules/course/model/course.ts[m
[1m+++ b/apps/services/university-gateway/backend/src/app/modules/course/model/course.ts[m
[36m@@ -14,7 +14,7 @@[m [mimport {[m
 } from 'sequelize-typescript'[m
 import { Season } from '../../program/types'[m
 import { University } from '../../university/model'[m
[31m-import { PageInfo } from '@island.is/nest/pagination'[m
[32m+[m[32m//import { PageInfo } from '@island.is/nest/pagination'[m
 [m
 @Table({[m
   tableName: 'course',[m
[36m@@ -175,15 +175,15 @@[m [mexport class CourseResponse {[m
   })[m
   data!: Course[][m
 [m
[31m-  @ApiProperty({[m
[31m-    description: 'Page information (for pagination)',[m
[31m-  })[m
[31m-  pageInfo!: PageInfo[m
[32m+[m[32m//  @ApiProperty({[m
[32m+[m[32m//    description: 'Page information (for pagination)',[m
[32m+[m[32m//  })[m
[32m+[m[32m//  pageInfo!: PageInfo[m
 [m
[31m-  @ApiProperty({[m
[31m-    description: 'Total number of items in result (for pagination)',[m
[31m-  })[m
[31m-  totalCount!: number[m
[32m+[m[32m//  @ApiProperty({[m
[32m+[m[32m//    description: 'Total number of items in result (for pagination)',[m
[32m+[m[32m//  })[m
[32m+[m[32m//  totalCount!: number[m
 }[m
 [m
 export class CourseDetailsResponse {[m
[1mdiff --git a/apps/services/university-gateway/backend/src/app/modules/program/model/program.ts b/apps/services/university-gateway/backend/src/app/modules/program/model/program.ts[m
[1mindex 64789a1a77..ef4a527fc8 100644[m
[1m--- a/apps/services/university-gateway/backend/src/app/modules/program/model/program.ts[m
[1m+++ b/apps/services/university-gateway/backend/src/app/modules/program/model/program.ts[m
[36m@@ -15,7 +15,7 @@[m [mimport { ProgramTag } from './programTag'[m
 import { ProgramModeOfDelivery } from './programModeOfDelivery'[m
 import { University } from '../../university/model'[m
 import { ProgramCourse } from './programCourse'[m
[31m-import { PageInfo } from '@island.is/nest/pagination'[m
[32m+[m[32m//import { PageInfo } from '@island.is/nest/pagination'[m
 [m
 @Table({[m
   tableName: 'program',[m
[36m@@ -381,15 +381,15 @@[m [mexport class ProgramResponse {[m
   })[m
   data!: Program[][m
 [m
[31m-  @ApiProperty({[m
[31m-    description: 'Page information (for pagination)',[m
[31m-  })[m
[31m-  pageInfo!: PageInfo[m
[32m+[m[32m//  @ApiProperty({[m
[32m+[m[32m//    description: 'Page information (for pagination)',[m
[32m+[m[32m//  })[m
[32m+[m[32m//  pageInfo!: PageInfo[m
 [m
[31m-  @ApiProperty({[m
[31m-    description: 'Total number of items in result (for pagination)',[m
[31m-  })[m
[31m-  totalCount!: number[m
[32m+[m[32m//  @ApiProperty({[m
[32m+[m[32m//    description: 'Total number of items in result (for pagination)',[m
[32m+[m[32m//  })[m
[32m+[m[32m//  totalCount!: number[m
 }[m
 [m
 export class ProgramDetailsResponse {[m
[1mdiff --git a/apps/services/university-gateway/backend/tsconfig.app.json b/apps/services/university-gateway/backend/tsconfig.app.json[m
[1mindex 1a0fe97af7..a9f6ab23ee 100644[m
[1m--- a/apps/services/university-gateway/backend/tsconfig.app.json[m
[1m+++ b/apps/services/university-gateway/backend/tsconfig.app.json[m
[36m@@ -3,8 +3,9 @@[m
   "compilerOptions": {[m
     "allowJs": true,[m
     "outDir": "../../../../dist/out-tsc",[m
[31m-    "types": ["node"][m
[32m+[m[32m    "types": [ "node" ],[m
[32m+[m[32m    "target": "es2021"[m
   },[m
[31m-  "exclude": ["**/*.spec.ts", "**/*.test.ts", "**/test/**"],[m
[32m+[m[32m  "exclude": [ "**/*.spec.ts", "**/*.test.ts", "**/test/**", "jest.config.ts" ],[m
   "include": ["**/*.ts"][m
 }[m
[1mdiff --git a/apps/services/university-gateway/backend/tsconfig.spec.json b/apps/services/university-gateway/backend/tsconfig.spec.json[m
[1mindex 79587f1662..50a811d947 100644[m
[1m--- a/apps/services/university-gateway/backend/tsconfig.spec.json[m
[1m+++ b/apps/services/university-gateway/backend/tsconfig.spec.json[m
[36m@@ -3,7 +3,7 @@[m
   "compilerOptions": {[m
     "outDir": "../../../../dist/out-tsc",[m
     "module": "commonjs",[m
[31m-    "types": ["jest", "node"][m
[32m+[m[32m    "types": [ "jest", "node" ][m
   },[m
[31m-  "include": ["**/*.spec.ts", "**/*.test.ts", "**/*.d.ts"][m
[32m+[m[32m  "include": [ "**/*.spec.ts", "**/*.test.ts", "**/*.d.ts", "jest.config.ts" ][m
 }[m
[1mdiff --git a/apps/services/university-gateway/scheduler/infra/university-gateway-scheduler.ts b/apps/services/university-gateway/scheduler/infra/university-gateway-scheduler.ts[m
[1mindex 5a52f40d42..face47bd46 100644[m
[1m--- a/apps/services/university-gateway/scheduler/infra/university-gateway-scheduler.ts[m
[1m+++ b/apps/services/university-gateway/scheduler/infra/university-gateway-scheduler.ts[m
[36m@@ -18,7 +18,7 @@[m [mexport const serviceSetup = (services: {[m
     .args('--no-experimental-fetch', 'main.js')[m
     .extraAttributes({[m
       // Schedule to run daily at two in the morning.[m
[31m-      dev: { schedule: '0 2 * * *' },[m
[31m-      staging: { schedule: '0 2 * * *' },[m
[31m-      prod: { schedule: '0 2 * * *' },[m
[32m+[m[32m      dev: { schedule: '* * * * *' },[m
[32m+[m[32m      staging: { schedule: '* * * * *' },[m
[32m+[m[32m      prod: { schedule: '* * * * *' },[m
     })[m
[1mdiff --git a/apps/services/university-gateway/scheduler/project.json b/apps/services/university-gateway/scheduler/project.json[m
[1mindex bdf60a8b63..6728ef8ca1 100644[m
[1m--- a/apps/services/university-gateway/scheduler/project.json[m
[1m+++ b/apps/services/university-gateway/scheduler/project.json[m
[36m@@ -1,12 +1,12 @@[m
 {[m
[31m-  "root": "apps/services/university-gateway/scheduler",[m
[32m+[m[32m  "name": "services-university-gateway-scheduler",[m
   "sourceRoot": "apps/services/university-gateway/scheduler/src",[m
   "projectType": "application",[m
   "prefix": "services-university-gateway-scheduler",[m
   "targets": {[m
     "build": {[m
       "executor": "./tools/executors/node:build",[m
[31m-      "outputs": ["{options.outputPath}"],[m
[32m+[m[32m      "outputs": [ "{options.outputPath}" ],[m
       "options": {[m
         "outputPath": "dist/apps/services/university-gateway/scheduler",[m
         "main": "apps/services/university-gateway/scheduler/src/main.ts",[m
[36m@@ -22,13 +22,13 @@[m
       }[m
     },[m
     "serve": {[m
[31m-      "executor": "@nrwl/node:node",[m
[32m+[m[32m      "executor": "@nx/js:node",[m
       "options": {[m
         "buildTarget": "services-university-gateway-scheduler:build"[m
       }[m
     },[m
     "lint": {[m
[31m-      "executor": "@nrwl/linter:eslint",[m
[32m+[m[32m      "executor": "@nx/linter:eslint",[m
       "options": {[m
         "lintFilePatterns": [[m
           "apps/services/university-gateway/scheduler/**/*.{ts,tsx,js,jsx}"[m
[36m@@ -36,8 +36,8 @@[m
       }[m
     },[m
     "test": {[m
[31m-      "executor": "@nrwl/jest:jest",[m
[31m-      "outputs": ["coverage/apps/services/university-gateway/scheduler"],[m
[32m+[m[32m      "executor": "@nx/jest:jest",[m
[32m+[m[32m      "outputs": [ "coverage/apps/services/university-gateway/scheduler" ],[m
       "options": {[m
         "jestConfig": "apps/services/university-gateway/scheduler/jest.config.js",[m
         "passWithNoTests": true[m
[36m@@ -45,5 +45,5 @@[m
     },[m
     "docker-express": {}[m
   },[m
[31m-  "tags": ["scope:university-gateway-api"][m
[32m+[m[32m  "tags": [ "scope:university-gateway-api" ][m
 }[m
[1mdiff --git a/apps/services/university-gateway/scheduler/src/app/app.service.ts b/apps/services/university-gateway/scheduler/src/app/app.service.ts[m
[1mindex 2e444d496a..622392a859 100644[m
[1m--- a/apps/services/university-gateway/scheduler/src/app/app.service.ts[m
[1m+++ b/apps/services/university-gateway/scheduler/src/app/app.service.ts[m
[36m@@ -26,32 +26,33 @@[m [mexport class AppService {[m
     let done = false[m
 [m
     do {[m
[31m-      done = await fetch([m
[31m-        `${this.config.backendUrl}/api/internal/cases/archive`,[m
[31m-        {[m
[31m-          method: 'POST',[m
[31m-          headers: {[m
[31m-            'Content-Type': 'application/json',[m
[31m-            authorization: `Bearer ${this.config.backendAccessToken}`,[m
[31m-          },[m
[31m-        },[m
[31m-      )[m
[31m-        .then(async (res) => {[m
[31m-          const response = await res.json()[m
[31m-[m
[31m-          if (res.ok) {[m
[31m-            return !response.caseArchived[m
[31m-          }[m
[31m-[m
[31m-          logger.error('Failed to archive cases', { response })[m
[31m-[m
[31m-          return true[m
[31m-        })[m
[31m-        .catch((reason) => {[m
[31m-          logger.error('Failed to archive cases', { reason })[m
[31m-[m
[31m-          return true[m
[31m-        })[m
[32m+[m[32m      //done = await fetch([m
[32m+[m[32m      //  `${this.config.backendUrl}/api/internal/cases/archive`,[m
[32m+[m[32m      //  {[m
[32m+[m[32m      //    method: 'POST',[m
[32m+[m[32m      //    headers: {[m
[32m+[m[32m      //      'Content-Type': 'application/json',[m
[32m+[m[32m      //      authorization: `Bearer ${this.config.backendAccessToken}`,[m
[32m+[m[32m      //    },[m
[32m+[m[32m      //  },[m
[32m+[m[32m      //)[m
[32m+[m[32m      //  .then(async (res) => {[m
[32m+[m[32m      //    const response = await res.json()[m
[32m+[m
[32m+[m[32m      //    if (res.ok) {[m
[32m+[m[32m      //      return !response.caseArchived[m
[32m+[m[32m      //    }[m
[32m+[m
[32m+[m[32m      //    logger.error('Failed to archive cases', { response })[m
[32m+[m
[32m+[m[32m      //    return true[m
[32m+[m[32m      //  })[m
[32m+[m[32m      //  .catch((reason) => {[m
[32m+[m[32m      //    logger.error('Failed to archive cases', { reason })[m
[32m+[m
[32m+[m[32m      //    return true[m
[32m+[m[32m      //  })[m
[32m+[m[32m      console.log('University Schedule prófun')[m
     } while ([m
       !done &&[m
       minutesBetween(startTime, now()) < this.config.timeToLiveMinutes[m
[1mdiff --git a/apps/services/university-gateway/scheduler/tsconfig.app.json b/apps/services/university-gateway/scheduler/tsconfig.app.json[m
[1mindex 6b28dbff02..39c9598b87 100644[m
[1m--- a/apps/services/university-gateway/scheduler/tsconfig.app.json[m
[1m+++ b/apps/services/university-gateway/scheduler/tsconfig.app.json[m
[36m@@ -7,6 +7,6 @@[m
     "emitDecoratorMetadata": true,[m
     "target": "es2015"[m
   },[m
[31m-  "exclude": [ "**/*.spec.ts", "**/*.test.ts" ],[m
[32m+[m[32m  "exclude": [ "**/*.spec.ts", "**/*.test.ts", "jest.config.ts" ],[m
   "include": [ "**/*.ts" ][m
 }[m
[1mdiff --git a/apps/services/university-gateway/scheduler/tsconfig.spec.json b/apps/services/university-gateway/scheduler/tsconfig.spec.json[m
[1mindex 5a71ac82e9..50a811d947 100644[m
[1m--- a/apps/services/university-gateway/scheduler/tsconfig.spec.json[m
[1m+++ b/apps/services/university-gateway/scheduler/tsconfig.spec.json[m
[36m@@ -5,5 +5,5 @@[m
     "module": "commonjs",[m
     "types": [ "jest", "node" ][m
   },[m
[31m-  "include": ["**/*.spec.ts", "**/*.test.ts", "**/*.d.ts"][m
[32m+[m[32m  "include": [ "**/*.spec.ts", "**/*.test.ts", "**/*.d.ts", "jest.config.ts" ][m
 }[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 4d223bb645..110eaa47af 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -281,7 +281,7 @@[m
     "testcontainers": "7.23.2",[m
     "to-querystring": "1.1.1",[m
     "triple-beam": "1.3.0",[m
[31m-    "tslib": "1.14.1",[m
[32m+[m[32m    "tslib": "^2.3.0",[m
     "ua-parser-js": "1.0.33",[m
     "unified": "9.2.0",[m
     "uuidv4": "6.0.8",[m
[36m@@ -325,6 +325,7 @@[m
     "@nx/eslint-plugin": "16.5.0",[m
     "@nx/express": "16.5.0",[m
     "@nx/jest": "16.5.0",[m
[32m+[m[32m    "@nx/js": "16.5.0",[m
     "@nx/linter": "16.5.0",[m
     "@nx/nest": "16.5.0",[m
     "@nx/next": "16.5.0",[m
[36m@@ -423,6 +424,7 @@[m
     "inspectpack": "4.7.1",[m
     "jest": "29.4.3",[m
     "jest-environment-jsdom": "29.4.3",[m
[32m+[m[32m    "jest-environment-node": "^29.4.1",[m
     "jest-mock-extended": "1.0.10",[m
     "jest-resolve": "26.6.2",[m
     "jest-transform-stub": "2.0.0",[m
[36m@@ -430,7 +432,7 @@[m
     "mailparser": "3.5.0",[m
     "next-secure-headers": "2.1.0",[m
     "nx": "16.5.0",[m
[31m-    "prettier": "2.2.1",[m
[32m+[m[32m    "prettier": "^2.6.2",[m
     "quicktype": "15.0.258",[m
     "sequelize-cli": "6.4.1",[m
     "sort-paths": "1.1.1",[m
[1mdiff --git a/tsconfig.base.json b/tsconfig.base.json[m
[1mindex cf83aafe19..999a985e1f 100644[m
[1m--- a/tsconfig.base.json[m
[1m+++ b/tsconfig.base.json[m
[36m@@ -188,6 +188,9 @@[m
       "@island.is/api/domains/transport-authority": [[m
         "libs/api/domains/transport-authority/src/index.ts"[m
       ],[m
[32m+[m[32m      "@island.is/api/domains/university-gateway": [[m
[32m+[m[32m        "libs/api/domains/university-gateway/src/index.ts"[m
[32m+[m[32m      ],[m
       "@island.is/api/domains/university-of-iceland": [[m
         "libs/api/domains/university-of-iceland/src/index.ts"[m
       ],[m
[36m@@ -860,6 +863,9 @@[m
       "@island.is/testing/containers": ["libs/testing/containers/src/index.ts"],[m
       "@island.is/testing/fixtures": ["libs/testing/fixtures/src/index.ts"],[m
       "@island.is/testing/nest": ["libs/testing/nest/src/index.ts"],[m
[32m+[m[32m      "@island.is/university-gateway-types": [[m
[32m+[m[32m        "libs/university-gateway/types/src/index.ts"[m
[32m+[m[32m      ],[m
       "@island.is/user-monitoring": ["libs/user-monitoring/src/index.ts"],[m
       "@island.is/web/*": ["apps/web/*"],[m
       "@island.is/web/component*": ["apps/web/component*/real.ts"][m
[1mdiff --git a/yarn.lock b/yarn.lock[m
[1mindex fb56ef0f3a..7c1e3e50dd 100644[m
[1m--- a/yarn.lock[m
[1m+++ b/yarn.lock[m
[36m@@ -1546,6 +1546,16 @@[m [m__metadata:[m
   languageName: node[m
   linkType: hard[m
 [m
[32m+[m[32m"@babel/code-frame@npm:^7.22.10, @babel/code-frame@npm:^7.22.5":[m
[32m+[m[32m  version: 7.22.10[m
[32m+[m[32m  resolution: "@babel/code-frame@npm:7.22.10"[m
[32m+[m[32m  dependencies:[m
[32m+[m[32m    "@babel/highlight": ^7.22.10[m
[32m+[m[32m    chalk: ^2.4.2[m
[32m+[m[32m  checksum: 89a06534ad19759da6203a71bad120b1d7b2ddc016c8e07d4c56b35dea25e7396c6da60a754e8532a86733092b131ae7f661dbe6ba5d165ea777555daa2ed3c9[m
[32m+[m[32m  languageName: node[m
[32m+[m[32m  linkType: hard[m
[32m+[m
 "@babel/compat-data@npm:^7.13.11, @babel/compat-data@npm:^7.17.10, @babel/compat-data@npm:^7.19.3":[m
   version: 7.19.4[m
   resolution: "@babel/compat-data@npm:7.19.4"[m
[36m@@ -1560,10 +1570,10 @@[m [m__metadata:[m
   languageName: node[m
   linkType: hard[m
 [m
[31m-"@babel/compat-data@npm:^7.21.5, @babel/compat-data@npm:^7.22.0, @babel/compat-data@npm:^7.22.3":[m
[31m-  version: 7.22.3[m
[31m-  resolution: "@babel/compat-data@npm:7.22.3"[m
[31m-  checksum: eb001646f41459f42ccb0d39ee8bb3c3c495bc297234817044c0002689c625e3159a6678c53fd31bd98cf21f31472b73506f350fc6906e3bdfa49cb706e2af8d[m
[32m+[m[32m"@babel/compat-data@npm:^7.21.5, @babel/compat-data@npm:^7.22.5, @babel/compat-data@npm:^7.22.6, @babel/compat-data@npm:^7.22.9":[m
[32m+[m[32m  version: 7.22.9[m
[32m+[m[32m  resolution: "@babel/compat-data@npm:7.22.9"[m
[32m+[m[32m  checksum: bed77d9044ce948b4327b30dd0de0779fa9f3a7ed1f2d31638714ed00229fa71fc4d1617ae0eb1fad419338d3658d0e9a5a083297451e09e73e078d0347ff808[m
   languageName: node[m
   linkType: hard[m
 [m
[36m@@ -1659,25 +1669,25 @@[m [m__metadata:[m
   linkType: hard[m
 [m
 "@babel/core@npm:^7.20.2, @babel/core@npm:^7.21.3":[m
[31m-  version: 7.22.1[m
[31m-  resolution: "@babel/core@npm:7.22.1"[m
[32m+[m[32m  version: 7.22.10[m
[32m+[m[32m  resolution: "@babel/core@npm:7.22.10"[m
   dependencies:[m
     "@ampproject/remapping": ^2.2.0[m
[31m-    "@babel/code-frame": ^7.21.4[m
[31m-    "@babel/generator": ^7.22.0[m
[31m-    "@babel/helper-compilation-targets": ^7.22.1[m
[31m-    "@babel/helper-module-transforms": ^7.22.1[m
[31m-    "@babel/helpers": ^7.22.0[m
[31m-    "@babel/parser": ^7.22.0[m
[31m-    "@babel/template": ^7.21.9[m
[31m-    "@babel/traverse": ^7.22.1[m
[31m-    "@babel/types": ^7.22.0[m
[32m+[m[32m    "@babel/