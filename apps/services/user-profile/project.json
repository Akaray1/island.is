{
  "name": "services-user-profile",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/services/user-profile/src",
  "projectType": "application",
  "prefix": "services-user-profile",
  "generators": {},
  "targets": {
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "development",
      "options": {
        "main": "apps/services/user-profile/src/main.ts",
        "outputPath": "dist/apps/services/user-profile",
        "outputFileName": "main.js",
        "format": ["cjs"],
        "skipTypeCheck": true,
        "tsConfig": "apps/services/user-profile/tsconfig.app.json",
        "platform": "node",
        "assets": [
          {
            "input": "apps/services/user-profile",
            "glob": "src/assets/*",
            "output": "/assets"
          },
          {
            "input": "apps/services/user-profile",
            "glob": "migrations/*",
            "output": "/migrations"
          },
          {
            "input": "apps/services/user-profile",
            "glob": ".sequelizerc",
            "output": "/"
          },
          {
            "input": "libs/email-service/src/tools/design",
            "glob": "*",
            "output": "/email-service-assets"
          }
        ]
      },
      "configurations": {
        "development": {
          "minify": false
        },
        "production": {
          "minify": true,
          "generatePackageJson": true
        }
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "services-user-profile:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "options": {
        "lintFilePatterns": ["apps/services/user-profile/**/*.{ts,tsx,js,jsx}"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "options": {
        "jestConfig": "apps/services/user-profile/jest.config.ts",
        "passWithNoTests": true
      },
      "outputs": ["{workspaceRoot}/coverage/apps/services/user-profile"]
    },
    "dev-services": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker-compose up -d",
        "cwd": "apps/services/user-profile"
      }
    },
    "schemas/build-openapi": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn nx run services-user-profile:schemas/build-openapi-internal $NX_OPTIONS"
      }
    },
    "schemas/build-openapi-internal": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/user-profile/tsconfig.app.json apps/services/user-profile/src/buildOpenApi.ts"
      },
      "outputs": ["{workspaceRoot}/apps/services/user-profile/src/openapi.yaml"]
    },
    "migrate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
        "cwd": "apps/services/user-profile/"
      }
    },
    "migrate/generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "../../../node_modules/.bin/sequelize-cli migration:generate --name $(whoami)",
        "cwd": "apps/services/user-profile/"
      }
    },
    "dev-init": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn nx run services-user-profile:dev-services",
          "yarn nx run services-user-profile:migrate"
        ],
        "parallel": false
      }
    },
    "dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn start services-user-profile",
          "scripts/run-xroad-proxy.sh"
        ],
        "parallel": true
      }
    },
    "docker-express": {},
    "service-service-portal-api": {}
  },
  "tags": ["scope:nest"]
}
