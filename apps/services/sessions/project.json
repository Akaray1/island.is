{
  "name": "services-sessions",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/services/sessions/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "./tools/executors/node:build",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/services/sessions/api",
        "main": "apps/services/sessions/src/main.ts",
        "tsConfig": "apps/services/sessions/tsconfig.app.json",
        "assets": [
          {
            "glob": "*",
            "input": "apps/services/sessions/migrations",
            "output": "./migrations"
          },
          {
            "glob": ".sequelizerc",
            "input": "apps/services/sessions",
            "output": "./"
          },
          {
            "glob": "sequelize.config.js",
            "input": "apps/services/sessions",
            "output": "./"
          }
        ]
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false
        }
      }
    },
    "update-geoip": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npm run-script updatedb license_key=${GEOIP_LICENSE_KEY}",
        "cwd": "node_modules/geoip-lite"
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "services-sessions:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/services/sessions/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/services/sessions"],
      "options": {
        "jestConfig": "apps/services/sessions/jest.config.ts",
        "passWithNoTests": false
      }
    },
    "worker": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "services-sessions:build",
        "buildTargetOptions": {
          "outputPath": "dist/apps/services/sessions/worker"
        },
        "args": ["--job", "worker"]
      }
    },
    "dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx run {projectName}:dev:init",
          "nx run {projectName}:dev:run"
        ],
        "parallel": false
      },
      "configurations": {
        "services": {
          "command": "docker-compose up -d",
          "cwd": "{projectRoot}"
        },
        "init": {
          "commands": [
            "nx run {projectName}:dev:services",
            "nx run {projectName}:migrate"
          ],
          "parallel": false
        },
        "run": {
          "commands": ["nx run {projectName}:serve"],
          "parallel": true
        }
      }
    },
    "codegen/backend-schema": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/sessions/tsconfig.app.json apps/services/sessions/src/buildOpenApi.ts"
      },
      "outputs": ["{projectRoot}/src/openapi.yaml"]
    },
    "migrate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "sequelize-cli db:migrate",
        "cwd": "apps/services/sessions"
      }
    },
    "migrate/generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "sequelize-cli migration:generate",
        "cwd": "apps/services/sessions"
      }
    },
    "docker-express": {}
  },
  "tags": ["scope:nest"]
}
