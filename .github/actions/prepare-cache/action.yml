name: 'Composite Cache and Setup'
description: 'Caches dependencies and setup environment'
inputs:
  path:
    required: true
    description: 'Path to cache'
  key:
    required: true
    description: 'Path to cache'
outputs:
  success:
    description: 'success'
    value: ${{ steps.computed-outputs.outputs.success }}
  cache-hit:
    description: 'cache-hit'
    value: ${{ steps.computed-outputs.outputs.cache-hit }}
runs:
  using: 'composite'
  steps:

    - name: Prepare node-modules cache
      id: prepare-node-modules
      if: ${{ contains(inputs.path, 'node_modules') }}
      continue-on-error: true
      uses: ./.github/actions/cache
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}

    - name: Prepare generated-files cache
      id: prepare-generated-files
      if: ${{ contains(inputs.path, 'generated_files.tar.gz') }}
      continue-on-error: true
      uses: ./.github/actions/cache
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}

    - name: Check cache outcome
      id: check-cache-outcome
      shell: bash
      run: |
        echo "Checking cache outcome for ${{ inputs.path }}"
        echo "node-modules cache outcome: ${{ steps.prepare-node-modules.outputs.outcome }}"
        echo "generated-files cache outcome: ${{ steps.prepare-generated-files.outputs.outcome }}"

        if [[ "${{ steps.prepare-node-modules.outputs.outcome }}" == "success" ]] || [[ "${{ steps.prepare-generated-files.outputs.outcome }}" == "success" ]]; then
          CACHE_OUTCOME="success"
        else
          CACHE_OUTCOME="failure"
        fi

        echo "Overall Cache outcome: $CACHE_OUTCOME"
        echo "outcome=$CACHE_OUTCOME" >> $GITHUB_OUTPUT

    - name: Check cache hit
      id: check-cache-hit
      shell: bash
      run: |
        echo "Checking cache hit for ${{ inputs.path }}"
        echo "node-modules cache hit: ${{ steps.prepare-node-modules.outputs.cache-hit }}"
        echo "generated-files cache outcome: ${{ steps.prepare-generated-files.outputs.cache-hit }}"

        if [[ "${{ steps.prepare-node-modules.outputs.cache-hit }}" == "true" ]] || [[ "${{ steps.prepare-generated-files.outputs.cache-hit }}" == "true" ]]; then
          CACHE_HIT="true"
        else
          CACHE_HIT="false"
        fi

        echo "Overall Cache hit: $CACHE_HIT"
        echo "cache-hit=$CACHE_HIT" >> $GITHUB_OUTPUT

    - name: Check cache success
      id: check-cache-success
      shell: bash
      run: |
        echo "Checking cache success for ${{ inputs.path }}"
        echo "node-modules cache success: ${{ steps.prepare-node-modules.outputs.success }}"
        echo "generated-files cache success: ${{ steps.prepare-generated-files.outputs.success }}"

        if [[ "${{ steps.prepare-node-modules.outputs.success }}" == "true" ]] || [[ "${{ steps.prepare-generated-files.outputs.success }}" == "true" ]]; then
          CACHE_SUCCESS="true"
        else
          CACHE_SUCCESS="false"
        fi

        echo "Overall Cache success: $CACHE_SUCCESS"
        echo "success=$CACHE_SUCCESS" >> $GITHUB_OUTPUT

    - name: Building NodeJS dependencies
      shell: bash
      if: ${{ steps.check-cache-hit.outputs.cache-hit != 'true' && contains(inputs.path, 'node_modules') }}
      run: ./scripts/ci/10_prepare-host-deps.sh

    - name: Run codegen
      id: run-codegen
      shell: bash
      if: ${{ steps.check-cache-hit.outputs.cache-hit == 'true' && contains(inputs.path, 'generated_files.tar.gz') }}
      run: |
        node --version
        tar zcvf generated_files.tar.gz $(./scripts/ci/get-files-touched-by.sh yarn codegen --skip-cache | xargs realpath --relative-to $(pwd))

    - name: Untar generated files
      id: untar-generated-files
      if: ${{ steps.check-cache-hit.outputs.cache-hit == 'true' && contains(inputs.path, 'generated_files.tar.gz') }}
      shell: bash
      run: |
        echo "Untar generated-files"
        tar zxvf generated_files.tar.gz

    - name: Gather outputs
      id: computed-outputs
      if: always()
      shell: bash
      run: |
        if [[ "${{ steps.check-cache-success.outputs.success }}" == "true" ]]
        then
          echo "success=true" >> $GITHUB_OUTPUT
        else
          echo "success=false" >> $GITHUB_OUTPUT
        fi

        if [[ "${{ steps.check-cache-hit.outputs.cache-hit }}" == "true" ]]
        then
          echo "cache-hit=true" >> $GITHUB_OUTPUT
        else
          echo "cache-hit=false" >> $GITHUB_OUTPUT
        fi
