name: Pipes pull request

on:
  pull_request: {}
  workflow_dispatch: {}

defaults:
    run:
        shell: bash
  
env:
  COMPOSE_HTTP_TIMEOUT: 180
  GITHUB_ACTIONS_CACHE_URL: https://cache.dev01.devland.is/

jobs:
  prepare:
    runs-on: ec2-runners
    container:
      image: public.ecr.aws/m3u4c4h9/island-is/actions-runner-public:latest

    env:
      CHUNK_SIZE: 7
      SERVERSIDE_FEATURES_ON: ''

    outputs:
      node-modules-hash: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}
      generated-files-cache-key: ${{ steps.calculate_generated_files_cache_key.outputs.generated-files-cache-key }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20.5.1'

      - name: Setup yarn
        run: npm install -g yarn
    
      - name: Calculate cache key for node_modules
        id: calculate_node_modules_hash
        run: |
          PACKAGE_JSON_HASH=$(cat package.json | jq '{resolutions,dependencies,devDependencies}' | sha1sum -t | cut -f1 -d" ")
          echo "PACKAGE_JSON_HASH: $PACKAGE_JSON_HASH"
          export NODE_MODULES_HASH=${{ runner.os }}-${{ hashFiles('yarn.lock') }}-$PACKAGE_JSON_HASH
          echo "NODE_MODULES_HASH: $NODE_MODULES_HASH"
          echo "node-modules-hash=$NODE_MODULES_HASH" >> $GITHUB_OUTPUT

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        continue-on-error: true
        uses: ./.github/actions/cache
        with:
          path: node_modules
          key: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}-yarn

      - name: Check cache success
        run: '[[ "${{ steps.node-modules.outputs.success }}" != "false" ]] || exit 1'

      - name: Building NodeJS dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: ./scripts/ci/10_prepare-host-deps.sh

      - name: Install pipes dependencies
        working-directory: ./pipes
        run: yarn install
      - name: Run pipes PR
        working-directory: ./pipes
        run: yarn start

