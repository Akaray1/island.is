{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "Version 2 of API.RU.IS",
    "description": "This is an API managed by Reykjavik University",
    "termsOfService": "The API is owned by Reykjavik University and therefore any suspicious activities will not be taken lightly",
    "contact": {
      "name": "Reykjavik University",
      "url": "/manage/",
      "email": "help@ru.is"
    }
  },
  "host": "devproxy.ru.is/test/api",
  "schemes": ["https"],
  "paths": {
    "/academicprogress": {
      "get": {
        "tags": ["AcademicProgress"],
        "summary": "Used to get the information about students by LIN",
        "operationId": "AcademicProgress_GetAcademicProgressBySsnAndYear",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kt",
            "in": "query",
            "description": "List of SSN should be sent in like, kt[]=1234567890&amp;kt[]=9876543210",
            "required": true,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "year",
            "in": "query",
            "description": "The year you want information about",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.AcademicProgress.AcademicProgress"
            }
          }
        }
      }
    },
    "/coursecategories": {
      "get": {
        "tags": ["CourseCategories"],
        "summary": "Retrieves all course categories",
        "operationId": "CourseCategories_GetCourseCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/courses/{canvasCourseId}/assignments/{canvasAssignmentId}/registrationNumbers": {
      "get": {
        "tags": ["Courses"],
        "summary": "Retrieves a map of canvas user id -&gt; exam id. Used for the anonymous grading",
        "operationId": "Courses_GetRegistrationNumbersAssociatedWithCourseAndAssignment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "canvasCourseId",
            "in": "path",
            "description": "The course id from Canvas LMS",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "canvasAssignmentId",
            "in": "path",
            "description": "The assignment id from Canvas LMS",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "format": "int32", "type": "integer" }
            }
          }
        }
      }
    },
    "/courses/{courseCode}/prerequisites": {
      "get": {
        "tags": ["Courses"],
        "summary": "Retrieves all prerequisites for a given course based on coursecode",
        "operationId": "Courses_GetPrerequisitesAssociatedWithCourse",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "courseCode",
            "in": "path",
            "description": "The course code",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Courses.CoursePrerequisite"
              }
            }
          }
        }
      }
    },
    "/creditstypes": {
      "get": {
        "tags": ["CreditsTypes"],
        "summary": "Retrieves all active credit types",
        "operationId": "CreditsTypes_GetCreditsTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "tags": ["Departments"],
        "summary": "A list of all departments nested of there head-departments",
        "operationId": "Departments_GetAllDepartments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Departments.Department"
              }
            }
          }
        }
      }
    },
    "/departments/teaching": {
      "get": {
        "tags": ["Departments"],
        "summary": "Retrieves all departments that contain courses",
        "operationId": "Departments_GetAllTeachingDepartments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Departments.Department"
              }
            }
          }
        }
      }
    },
    "/departments/{departmentId}": {
      "get": {
        "tags": ["Departments"],
        "summary": "Retrieves a department by id",
        "operationId": "Departments_GetDepartmentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "A valid department id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Departments.DepartmentExtended"
            }
          }
        }
      }
    },
    "/departments/{departmentId}/teachers": {
      "get": {
        "tags": ["Departments"],
        "summary": "Retrieves all teachers within a department. Can take in one filter parameter e.g. /v2/departments/1/teachers?q=jon",
        "operationId": "Departments_GetTeachersByDepartmentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "The id of the department",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "The query string to use in filtering",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Staff.StaffLite"
              }
            }
          }
        }
      }
    },
    "/departments/{departmentId}/majors": {
      "get": {
        "tags": ["Departments"],
        "summary": "Retrieves all majors associated with a department",
        "operationId": "Departments_GetAllMajorsByDepartmentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "The id of the department",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.Major"
              }
            }
          }
        }
      }
    },
    "/departments/{departmentId}/majors/extended": {
      "get": {
        "tags": ["Departments"],
        "summary": "Retrieves all majors associated with a department",
        "operationId": "Departments_GetAllMajorsExtendedByDepartmentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "The id of the department",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.MajorExtended"
              }
            }
          }
        }
      }
    },
    "/departments/{departmentId}/staff": {
      "get": {
        "tags": ["Departments"],
        "summary": "Retrieves all staff associated with a specific department. Can take in two filter parameters e.g. /v2/departments/1/staff?postion=dósent&amp;q=jon",
        "operationId": "Departments_GetStaffByDepartmentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "The id of the department",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isTeacher",
            "in": "query",
            "description": "Boolean value whether staff is a teacher or NOT",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position of the staff, e.g. dósent",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Staff.StaffLite"
              }
            }
          }
        }
      }
    },
    "/majors": {
      "get": {
        "tags": ["Majors"],
        "summary": "Retrieves all majors",
        "operationId": "Majors_GetAllMajors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.Major"
              }
            }
          }
        }
      }
    },
    "/majors/extended": {
      "get": {
        "tags": ["Majors"],
        "summary": "Retrieves all majors",
        "operationId": "Majors_GetAllMajorsExtendedByDepartmentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.MajorExtended"
              }
            }
          }
        }
      }
    },
    "/majors/{majorId}": {
      "get": {
        "tags": ["Majors"],
        "summary": "Retrieves a major by major id",
        "operationId": "Majors_GetMajorByDepartmentIdAndMajorId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "majorId",
            "in": "path",
            "description": "The id of the major",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.MajorExtended"
            }
          }
        }
      }
    },
    "/majors/{majorId}/courses": {
      "get": {
        "tags": ["Majors"],
        "summary": "Retrieves all courses nested in a major for the current semester and onwards",
        "operationId": "Majors_GetAllCoursesAssociatedWithMajor",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "majorId",
            "in": "path",
            "description": "The id of the major",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Courses.CourseCatalog"
              }
            }
          }
        }
      }
    },
    "/majors/{majorId}/settings": {
      "get": {
        "tags": ["Majors"],
        "summary": "Retrieves settings for majors like dates that are important to students for example graduation dates and when student can register for courses and graduation",
        "operationId": "Majors_GetKeyDatesForMajor",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "majorId",
            "in": "path",
            "description": "The id of the major",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.Settings"
            }
          }
        }
      }
    },
    "/majortypes": {
      "get": {
        "tags": ["MajorTypes"],
        "summary": "Retrieves all active major types",
        "operationId": "MajorTypes_GetMajorTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.MajorType"
              }
            }
          }
        }
      }
    },
    "/positions": {
      "get": {
        "tags": ["Positions"],
        "summary": "Retrieves all available positions for staff, e.g. Teacher, Part time teacher, etc.",
        "operationId": "Positions_GetAllStaffPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/positions/{position}": {
      "get": {
        "tags": ["Positions"],
        "summary": "Retrieves filtered positions for staff, e.g. Teacher, Part time teacher, etc.",
        "operationId": "Positions_GetStaffPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/positions/{position}/staff": {
      "get": {
        "tags": ["Positions"],
        "summary": "Retrieves staff in RU filtered by position",
        "operationId": "Positions_GetAllStaffByPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "required": true,
            "type": "string"
          },
          { "name": "q", "in": "query", "required": false, "type": "string" },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Staff.StaffLite"
              }
            }
          }
        }
      }
    },
    "/registry": {
      "get": {
        "tags": ["Registry"],
        "summary": "Gets multiple registry entities with the specified filter.",
        "operationId": "Registry_Index",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "The value of the type you want to filter by.\r\n\r\nmodifiedDate: yyyy-MM-ddTHH:mm:ss",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "The type of filter you want to use.\r\n            \r\nPossible filters: [ modifiedDate ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Registry.Entry"
            }
          }
        }
      }
    },
    "/registry/{kennitala}": {
      "get": {
        "tags": ["Registry"],
        "summary": "Gets one registry entity with the specified kennitala.",
        "operationId": "Registry_Index_Kennitala",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kennitala",
            "in": "path",
            "description": "10-digit number which is unique for each resident in Iceland.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Registry.Entry"
            }
          }
        }
      }
    },
    "/registry/persons": {
      "get": {
        "tags": ["Registry"],
        "summary": "Gets multiple registry Person entities with the specified filter.",
        "operationId": "Registry_Persons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "The value of the type you want to filter by.\r\n\r\nmodifiedDate: yyyy-MM-ddTHH:mm:ss",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "The type of filter you want to use.\r\n            \r\nPossible filters: [ modifiedDate ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Registry.Entry"
            }
          }
        }
      }
    },
    "/registry/persons/{kennitala}": {
      "get": {
        "tags": ["Registry"],
        "summary": "Gets one registry Person entity with the specified kennitala.",
        "operationId": "Registry_Persons_Kennitala",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kennitala",
            "in": "path",
            "description": "10-digit number which is unique for each resident in Iceland.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Registry.Entry"
            }
          }
        }
      }
    },

    "/registry/companies/{kennitala}": {
      "get": {
        "tags": ["Registry"],
        "summary": "Gets one registry Company entity with the specified kennitala.",
        "operationId": "Registry_Companies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kennitala",
            "in": "path",
            "description": "10-digit number which is unique for each resident in Iceland.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Registry.Entry"
            }
          }
        }
      }
    },
    "/semesters/active": {
      "get": {
        "tags": ["Semesters"],
        "summary": "Retrieves the currently active semesters to register for.",
        "operationId": "Semesters_GetActiveSemesters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "includeLast",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Semesters.Semester"
              }
            }
          }
        }
      }
    },
    "/semesters": {
      "get": {
        "tags": ["Semesters"],
        "summary": "Retrieves all semesters",
        "operationId": "Semesters_GetAllSemesters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Semesters.Semester"
              }
            }
          }
        }
      }
    },
    "/semesters/{semester}/majors/{majorId}/courses": {
      "get": {
        "tags": ["Semesters"],
        "summary": "Retrieves all courses for given major and semester",
        "operationId": "Semesters_GetCoursesBySemesterAndMajor",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "semester",
            "in": "path",
            "description": "Semester code",
            "required": true,
            "type": "string"
          },
          {
            "name": "majorId",
            "in": "path",
            "description": "The id of the major",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Courses.CourseCatalog"
              }
            }
          }
        }
      }
    },
    "/semesters/{semester}/teachers/{teacherId}/courses": {
      "get": {
        "tags": ["Semesters"],
        "summary": "Retrieves all courses for given semester and teacher",
        "operationId": "Semesters_GetCoursesByTeachersUserIdAndSemesterCode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "semester",
            "in": "path",
            "description": "Semester code",
            "required": true,
            "type": "string"
          },
          {
            "name": "teacherId",
            "in": "path",
            "description": "The username of the teacher",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Courses.Course"
              }
            }
          }
        }
      }
    },
    "/staff": {
      "get": {
        "tags": ["Staff"],
        "summary": "Retrieves all staff in RU. Can take in two filter parameters e.g. /v2/staff?postion=dósent&amp;q=jon",
        "operationId": "Staff_GetAllStaff",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "position",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "q", "in": "query", "required": false, "type": "string" },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Staff.StaffLite"
              }
            }
          }
        }
      }
    },
    "/staff/teachers": {
      "get": {
        "tags": ["Staff"],
        "summary": "Retrieves all teachers. Can take in one filter parameter e.g. /v2/departments/1/teachers?q=jon",
        "operationId": "Staff_GetAllTeachers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "q", "in": "query", "required": false, "type": "string" },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Staff.StaffLite"
              }
            }
          }
        }
      }
    },
    "/staff/{staffId}": {
      "get": {
        "tags": ["Staff"],
        "summary": "Retrieves a staff by SSN",
        "operationId": "Staff_GetStaffById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "description": "Staff Id. To look up by kennitala use kt:{kennitala} or username use un:{username}",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Staff.Staff"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RekUni.IT.API.Public.Models.V2.AcademicProgress.AcademicProgress": {
      "description": "Used to give LIN information about students academic progress.",
      "type": "object",
      "properties": {
        "data": {
          "description": "List of student info being sent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.AcademicProgress.Student"
          }
        },
        "records": {
          "format": "int32",
          "description": "Number of student info being sent",
          "type": "integer"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.AcademicProgress.Student": {
      "description": "Single student and its acamedic progress\r\nUsed with AcadimcProgress",
      "type": "object",
      "properties": {
        "SSN": { "description": "SSN for a student", "type": "string" },
        "Registrations": {
          "description": "\"Námsbrautir námsmanns\"",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.AcademicProgress.Registration"
          }
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.AcademicProgress.Registration": {
      "description": "Single registration of a student",
      "type": "object",
      "properties": {
        "Program": {
          "description": "Númer námsgreinar hjá LÍN",
          "type": "string"
        },
        "ProgramName": {
          "description": "Heiti námsgreinar hjá LÍN",
          "type": "string"
        },
        "Degree": {
          "description": "Númer námsgráðu hjá LÍN",
          "type": "string"
        },
        "DegreeName": {
          "description": "Heiti námsgráðu hjá LÍN",
          "type": "string"
        },
        "SchoolProgramID": {
          "format": "int32",
          "description": "SchoolProgramID er okkar innra ID á brautinni",
          "type": "integer"
        },
        "SchoolProgramName": {
          "description": "Heiti námsgreinar hjá skóla",
          "type": "string"
        },
        "GraduationDate": {
          "format": "date-time",
          "description": "GraduationDate er útskriftardagur nemenda",
          "type": "string"
        },
        "ExpectedGraduationDate": {
          "format": "date-time",
          "description": "ExpectedGraduationDate er aðeins fyllt út ef viðkomandi nemandi hefur skráð sig í útskrift",
          "type": "string"
        },
        "StudyStartDate": {
          "format": "date-time",
          "description": "StudyStartDate er byrjun fyrst annar í námi.",
          "type": "string"
        },
        "FinishedUnits": {
          "description": "List of semesters with ECTS for that semester",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.AcademicProgress.FinishedUnits"
          }
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.AcademicProgress.FinishedUnits": {
      "description": "Status of the ECTS on the semester",
      "type": "object",
      "properties": {
        "Semester": { "description": "ID of a semester", "type": "string" },
        "ECTSCompleted": {
          "format": "double",
          "description": "ECTS completed on given semester",
          "type": "number"
        },
        "ECTSEvaluated": {
          "format": "double",
          "description": "ECTS evaluated on given semester",
          "type": "number"
        },
        "ECTSUnfinshed": {
          "format": "double",
          "description": "ECTS unfinished on given semester",
          "type": "number"
        },
        "ECTSAttendance": {
          "format": "double",
          "description": "\"Ástundaðar einingar. Eingöngu skilað fyrir haustönn\"",
          "type": "number"
        },
        "ECTSTotal": {
          "format": "double",
          "description": "ECTSTotal eru einingar sem eru lokið.",
          "type": "number"
        },
        "Tuition": {
          "format": "int32",
          "description": "Tuition fees for given semester",
          "type": "integer"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Courses.CoursePrerequisite": {
      "description": "Used to represent information about a course prequisite",
      "type": "object",
      "properties": {
        "name": { "description": "The name of the course", "type": "string" },
        "parallelEnrollment": {
          "description": "Determines whether the prerequisite can be enrolled in parallel to the current course",
          "type": "boolean"
        },
        "courseCode": {
          "description": "A unique code provided for each course",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Departments.Department": {
      "description": "Represents a department",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the department",
          "type": "integer"
        },
        "name": {
          "description": "The name of the department",
          "type": "string"
        },
        "headDepartmentId": {
          "format": "int32",
          "description": "The head-department ID.",
          "type": "integer"
        },
        "departments": {
          "description": "The name of the department",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Departments.Department"
          }
        },
        "organizationId": {
          "format": "int32",
          "description": "The ID of the organization unit",
          "type": "integer"
        },
        "organizationName": {
          "description": "The name of the organization unit",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Departments.DepartmentExtended": {
      "description": "A more extended version of the department",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the department",
          "type": "integer"
        },
        "name": {
          "description": "The name of the department",
          "type": "string"
        },
        "headDepartmentId": {
          "format": "int32",
          "description": "The head-department ID.",
          "type": "integer"
        },
        "email": {
          "description": "The email of the department",
          "type": "string"
        },
        "departments": {
          "description": "The name of the department",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Departments.Department"
          }
        },
        "website": {
          "description": "The website of the department",
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "description": "The ID of the organization unit",
          "type": "integer"
        },
        "organizationName": {
          "description": "The name of the organization unit",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Staff.StaffLite": {
      "description": "A minimalistic object representing a teacher",
      "type": "object",
      "properties": {
        "staffId": {
          "description": "The id of the employee",
          "type": "string"
        },
        "ssn": { "description": "The SSN of the employee", "type": "string" },
        "name": { "description": "The name of the teacher", "type": "string" },
        "email": { "description": "The teacher's email", "type": "string" },
        "telephone": {
          "description": "The telephone of the staff",
          "type": "string"
        },
        "position": {
          "description": "The main position of the employee/teacher, e.g. professor, CS",
          "type": "string"
        },
        "departmentName": {
          "description": "The main department the employee/teacher belongs to",
          "type": "string"
        },
        "isTeacher": {
          "description": "Is the employee registered as a teacher",
          "type": "boolean"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Majors.Major": {
      "description": "A minimal version to represent a major",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of the major",
          "type": "integer"
        },
        "name": { "description": "Name of the major", "type": "string" }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Majors.MajorExtended": {
      "description": "A model representing a major",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of the major",
          "type": "integer"
        },
        "name": { "description": "Name of the major", "type": "string" },
        "credits": {
          "format": "int32",
          "description": "How many ECTS (European Credit Transfer and Accumulation System) are needed to finish this major",
          "type": "integer"
        },
        "outcome": {
          "description": "The outcome of finishing this major",
          "type": "string"
        },
        "majorType": {
          "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.MajorType",
          "description": "Level of education",
          "readOnly": true
        },
        "title": {
          "description": "The qualifications of the major",
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "description": "The id of the department this major is in",
          "type": "integer"
        },
        "creditsType": {
          "description": "The type of credits given for this major",
          "type": "string"
        },
        "years": {
          "format": "int32",
          "description": "Number of years normally needed to finish this major",
          "type": "integer"
        },
        "settings": {
          "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.Settings",
          "description": "Major settings"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Majors.MajorType": {
      "description": "A model representing a major type",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key of the major type. As it is used in RU data",
          "type": "string"
        },
        "name": {
          "description": "Major Type name fit for displaying in UI",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Majors.Settings": {
      "description": "Settingss data structure",
      "type": "object",
      "properties": {
        "courseRegistration": {
          "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.RegistrationSettings",
          "description": "Course Registration begins"
        },
        "graduation": {
          "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.GraduationSettings",
          "description": "Course Registration ends"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Majors.RegistrationSettings": {
      "description": "Settingss data structure for Course Registration",
      "type": "object",
      "properties": {
        "begins": {
          "format": "date-time",
          "description": "Registration begins",
          "type": "string"
        },
        "ends": {
          "format": "date-time",
          "description": "Registration ends",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Majors.GraduationSettings": {
      "description": "Settingss data structure for Graduation",
      "type": "object",
      "properties": {
        "registration": {
          "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Majors.RegistrationSettings",
          "description": "Graduation Registration"
        },
        "date": {
          "format": "date-time",
          "description": "Graduation Date",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Courses.CourseCatalog": {
      "description": "Used to represent minimal information about a course",
      "type": "object",
      "properties": {
        "name": { "description": "The name of the course", "type": "string" },
        "hasPrerequisites": {
          "description": "Determines whether the course has prerequisites or NOT",
          "type": "boolean"
        },
        "credits": {
          "format": "int32",
          "description": "How many credits is this course valued at",
          "type": "integer"
        },
        "semesterCode": {
          "description": "The code of the semester, e.g. 20173",
          "type": "string"
        },
        "departmentid": {
          "format": "int32",
          "description": "The code identifying the department",
          "type": "integer"
        },
        "language": {
          "description": "The language of the course",
          "type": "string"
        },
        "description": {
          "description": "A text including the description of the course",
          "type": "string"
        },
        "courseCode": {
          "description": "A unique code provided for each course",
          "type": "string"
        },
        "outcome": {
          "description": "A text including the outcome of the course",
          "type": "string"
        },
        "availableOnSemesters": {
          "description": "On what semesters the course is available",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "courseCategory": {
          "description": "Course category",
          "type": "string"
        },
        "isCompulsory": {
          "description": "Is course compulsory or not",
          "type": "boolean"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Registry.Entry": {
      "description": "Represents the National Registry data exposed in the API",
      "type": "object",
      "properties": {
        "kennitala": {
          "description": "Kennitala of the person/company (unique icelandic id)",
          "type": "string"
        },
        "firstName": {
          "description": "First name of the person/company",
          "type": "string"
        },
        "middleName": {
          "description": "Middle name of the person/company",
          "type": "string"
        },
        "surname": {
          "description": "Surname of the person/company",
          "type": "string"
        },
        "streetName": {
          "description": "Registered address streetname",
          "type": "string"
        },
        "houseNumber": {
          "description": "Registered address house number",
          "type": "string"
        },
        "city": { "description": "Registered address city", "type": "string" },
        "province": {
          "description": "Registered address province",
          "type": "string"
        },
        "postalCode": {
          "format": "int32",
          "description": "Registered address postal code",
          "type": "integer"
        },
        "country": {
          "description": "Registered address country",
          "type": "string"
        },
        "birthDate": {
          "format": "date-time",
          "description": "Birthdate of the person/company",
          "type": "string"
        },
        "isValid": { "description": "Is the record valid", "type": "boolean" },
        "nationality": {
          "description": "Nationality of the person",
          "type": "string"
        },
        "isCorporate": {
          "description": "Is the record for a person or a company",
          "type": "boolean"
        },
        "isDeceased": {
          "description": "Is the person deceased",
          "type": "boolean"
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "Record modification date",
          "type": "string"
        },
        "gender": {
          "description": "String representation of the person's gender",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Semesters.Semester": {
      "description": "A model to represent a semester",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the semester, e.g. 20173",
          "type": "string"
        },
        "name": {
          "description": "Friendly name of the semester, e.g. Spring 2017",
          "type": "string"
        },
        "type": {
          "description": "The type of the semester, e.g. Spring, Autumn, Summer",
          "type": "string"
        },
        "year": {
          "format": "int32",
          "description": "The year of the semester",
          "type": "integer"
        },
        "schoolYear": {
          "description": "The school year, e.g. 2016-2017",
          "type": "string"
        },
        "starts": {
          "format": "date-time",
          "description": "Starting date of this semester",
          "type": "string"
        },
        "ends": {
          "format": "date-time",
          "description": "End date of this semester",
          "type": "string"
        },
        "language": { "description": "Language", "type": "string" }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Courses.Course": {
      "description": "Model entity for Courses",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique id of the course",
          "type": "integer"
        },
        "sisId": {
          "description": "The SIS id of the course",
          "type": "string"
        },
        "name": { "description": "The name of the course", "type": "string" },
        "courseCode": {
          "description": "A unique code provided for each course",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Staff.Staff": {
      "description": "A object representing a teacher",
      "type": "object",
      "properties": {
        "staffId": {
          "description": "The id of the employee",
          "type": "string"
        },
        "ssn": { "description": "The SSN of the employee", "type": "string" },
        "name": { "description": "The name of the teacher", "type": "string" },
        "email": { "description": "The teacher's email", "type": "string" },
        "telephone": {
          "description": "The telephone of the staff",
          "type": "string"
        },
        "position": {
          "description": "The main position of the employee/teacher, e.g. professor, CS",
          "type": "string"
        },
        "departmentName": {
          "description": "The main department the employee/teacher belongs to",
          "type": "string"
        },
        "isTeacher": {
          "description": "Is the employee registered as a teacher",
          "type": "boolean"
        },
        "positions": {
          "description": "The positions of the employee/teacher if the employee has more than one position, e.g. professor, CS",
          "type": "array",
          "items": { "type": "string" }
        },
        "departments": {
          "description": "The departments the employee/teacher belongs to if the employee works for more than one department",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RekUni.IT.API.Public.Models.V2.Departments.DepartmentLite"
          }
        },
        "website": {
          "description": "The staff's personal website",
          "type": "string"
        },
        "imageUrl": {
          "description": "The staff profile picture url",
          "type": "string"
        }
      }
    },
    "RekUni.IT.API.Public.Models.V2.Departments.DepartmentLite": {
      "description": "Represents a department",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the department",
          "type": "integer"
        },
        "name": {
          "description": "The name of the department",
          "type": "string"
        },
        "headDepartmentId": {
          "format": "int32",
          "description": "The head-department ID.",
          "type": "integer"
        }
      }
    }
  }
}
